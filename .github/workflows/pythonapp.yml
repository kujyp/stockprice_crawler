name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev default-libmysqlclient-dev build-essential
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8==3.6.0
        tools/ci/lint.sh
    - name: Setup mysql
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql version: '5.7.28'
        mysql database: 'test'
        mysql root password: 'password'
    - name: Verify DB connection
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
          sleep 1
        done
    - name: Check db migration
      run: |
        export SQLALCHEMY_DATABASE_URI="mysql://root:password@127.0.0.1:3306/test?charset=utf8"
        export FLASK_APP=wsgi.py
        flask db upgrade
        flask db migrate
        if [[ ! -z "$(git status --porcelain)" ]]; then
          echo "Some files changed. Did you run 'tools/mysql_db_migrate.sh'?"
          exit 1
        fi
    - name: Test with pytest
      run: |
        pip install -r requirements-test.txt
        export PYTEST_SQLALCHEMY_DATABASE_URI="mysql://root:password@127.0.0.1:3306/test?charset=utf8"
        tools/ci/pytest.sh
    - name: Publish to Registry
      if: github.ref == 'refs/heads/develop'
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: kujyp/stockprice_crawler
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "develop-latest, develop-${{ github.sha }}"
    - name: Deploy
      if: github.ref == 'refs/heads/develop'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_HOST_SSH_CREDENTIALS }}" | base64 --decode > ~/.ssh/id_rsa
        chmod 0400 ~/.ssh/id_rsa
        ssh-keyscan -t rsa -p ${{ secrets.DEPLOY_HOST_SSHPORT }} "${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/known_hosts
        scp -P${{ secrets.DEPLOY_HOST_SSHPORT }} tools/deploy/restart_server.sh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:.
        ssh -p${{ secrets.DEPLOY_HOST_SSHPORT }} ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} ./restart_server.sh --port 8000 --docker-tag develop-${{ github.sha }} --mysql-account ${{ secrets.DEPLOY_MYSQL_ACCOUNT }} --mysql-password ${{ secrets.DEPLOY_MYSQL_PASSWORD }} --mysql-host ${{ secrets.DEPLOY_MYSQL_HOST }} --mysql-port ${{ secrets.DEPLOY_MYSQL_PORT }} --mysql-database ${{ secrets.DEPLOY_MYSQL_DATABASE }}
        scp -P${{ secrets.DEPLOY_HOST_SSHPORT }} tools/crontabs/daily.sh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/var/services/homes/kujyp/crontab_scripts/.
        scp -P${{ secrets.DEPLOY_HOST_SSHPORT }} tools/crontabs/hourly.sh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/var/services/homes/kujyp/crontab_scripts/.
        scp -P${{ secrets.DEPLOY_HOST_SSHPORT }} tools/crontabs/minutely.sh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/var/services/homes/kujyp/crontab_scripts/.
